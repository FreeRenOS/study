#include <iostream>
#include <string>

using namespace std;

class Person {
private:
	char* name;
	int id;

public:
	Person(int id, const char* name);
	~Person();
	Person(const Person& person);
	void changeName(const char* name);
	void show() {
		cout << id << ',' << name << endl;
	}

};

Person::Person(int id, const char* name) {
	this->id = id;
	int len = strlen(name);

	this->name = new char[len + 1];
	strcpy_s(this->name, len + 1, name);
}

Person::~Person() {
	if (name)
		delete[] name;
}

Person::Person(const Person& person) {
	this->id = person.id;
	int len = strlen(person.name);

	this->name = new char[len + 1];
	strcpy_s(this->name, len + 1, person.name);
	cout << "복사 생성자 실행 원본 객체의 이름 " << this->name << endl;


}




void Person::changeName(const char* name) {
	if (strlen(name) > strlen(this->name))
		return;
	int len = strlen(name);
	strcpy_s(this->name, len + 1, name);
}

int main()
{
	Person fafa(10, "kaka");
	Person dada(fafa);

	cout << "dada 객체 생성 직후 ----" << endl;
	fafa.show();
	dada.show();

	dada.changeName("toto");
	cout << "dada 이름을 toto로 변경한 후 -----" << endl;
	fafa.show();
	dada.show();


	return 0;
}