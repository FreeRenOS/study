#include <string>
#include <iostream>
#include <list>
#include <vector>
#include <array>
#include <map>

using namespace std;

//void Print(const list<int>& data) {
//	for (auto iter = data.begin(); iter != data.end(); iter++) {
//		cout << *iter << " , ";
//	}
//	cout << endl;
//}




//void Print(const array<int,3>& data) {
//	for (auto iter = data.begin(); iter != data.end(); iter++) {
//		cout << *iter << " , ";
//	}
//	cout << endl;
//}





void Print(map<int, string>& data) {
	for (auto iter = data.begin(); iter != data.end(); iter++) {
		cout << (*iter).first << " : " << (*iter).second << endl;
	}
	cout << endl;
}





bool IsOdd(int arg) {//홀수있가?
	return arg % 2 == 0 ? 0 : 1;
}

int main() {

	map<int, string> data;
	data.insert({ 5,"첫번째" });
	data.insert({ 3,"두번째" });
	data.insert({ 11,"세번째" });

	data[3] = "test 수정";   // 궁금
	auto result = data.find(11); //find는 찾지못하면 끝위치 반환

	if (result != data.end())
		cout << "검색성공 : " << result->first << " : "
		<< result->second << endl;
	else
		cout << "검색 실패" << endl;

	Print(data);

	data.erase(5);
	Print(data);




















	//map<int, string> data;
	//data.insert({ 2,"첫번째" });
	//data.insert({ 1,"두번째" });
	//

	//Print(data);

	//auto ret = data.insert({ 1,"세번째" }); //insert 는 추가하고 위치값은 반환함
	//if (ret.second == true)
	//	cout << "데이터 추가 성공" << endl;
	//else
	//	cout << "데이터 추가 실패" << endl;

	//data.at(0) = "수정1";
	//Print(data);













	//array <int, 3> data1{ 10,2,5 };
	//array <int, 3> data2;
	//data2.fill(0);
	//data2.at(1) = 100;
	//Print(data2);

	//copy(data1.begin(), data1.end(), data2.begin());
	//Print(data1);
	//Print(data2);













	//list<int> data1;
	//list<int> data2({ 3,4,5 });

	//data1.push_back(2);
	//data1.push_back(7);
	//data1.sort(); 
	//merge 하기 전에 기존 정렬이 안되어있으면 예외발생
	//data1.merge(data2);// 합치면서 자동정렬, 두번째 리스트는 비워짐
	//Print(data1);

	//data2 = { 3,4,5 };
	//data1.splice(data1.begin(), data2);
	//Print(data1);





	//list<int> data1({ 1,2,1,2,1,7,1,10,11,15 });
	//data1.remove(1); //list에서 값1을 제거	
	//Print(data1);

	//data1.remove_if(IsOdd);
	//Print(data1);

	//data1.reverse();
	//Print(data1);






	//list<int> data1({ 1,2,3,2 });
	//data1.push_back(3);
	//data1.sort();
	//Print(data1);


	//data1.unique();
	//Print(data1);


	//list<int> data2({ 4,5,6 });
	//data2.merge(data1);
	//Print(data2);
	//
	////리스트가 링크로 되어있어 data2에 data1를 링크해서 붙이면 기존 data1이 data2에 복사되고 비어짐
	//for (auto iter = data1.begin(); iter != data1.end(); iter++) {
	//	cout << *iter << " , ";
	//}
	//cout << endl;


	return 0;
}