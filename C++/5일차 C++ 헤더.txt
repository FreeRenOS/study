//median.cpp
#include "median.h"


double median(vector<double>vec) {
	//1. 점수의 존재 유무 확인
	typedef vector<double>::size_type vec_sz;
	vec_sz size = vec.size();

	if (size == 0) {
		throw domain_error("벡터가 비었습니다. median 함수");
		//cout << endl << "입력한 과제 점수가 없습니다. 종료합니다.!" << endl;
		//return 1; //메인에서는 이렇게쓰면되는데 함수에서는 예외처리해야됨
	}

	//2.정렬 sort <algorithm>
	sort(vec.begin(), vec.end());

	//과제점수의 가운데값 median 구함
	vec_sz min = size / 2;
	double median;
	median = size % 2 == 0 ? (vec[min] + vec[min - 1]) / 2 : vec[min];
	return median;
}



//median.h

#ifndef HAHA_median_h
#define HAHA_median_h

#include <vector>
#include <algorithm>
#include <stdexcept>

using namespace std;

double median(vector<double> vec);


#endif





// student_info.h

#ifndef HAHA_student_info_h
#define HAHA_student_info_h

#include <iostream>
#include <string>
#include <vector>

using namespace std;

struct student_info
{
	string name;
	double midterm, finalterm;
	vector<double> homework;
	student_info() : name(""), midterm(0), finalterm(0), homework() {};
};


istream& read_homework(istream& in, vector<double>& homework);
istream& read(istream& is, student_info& s);
bool compare(const student_info& x, const student_info& y);




#endif